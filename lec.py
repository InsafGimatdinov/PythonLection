# Ввод и вывод данных

# print('Введите a') # Вызываем в консоль 
# a = input() # вводим в консоль 
# print('введите b') # Вызываем в консоль
# b = input() # Вводим в консоль
# c = 30 # Переменная результируюящая
# print(a, '+', b, '=', c) # Печать результата в консоль
# -------------------------------------------------------
# print('Введите a') #вызываем в консоль
# a = int(input()) # то же самое что в первом тролько 
# # в данном случае указываем какой тип данных следует считывать из консоли
# print('Введите b') #вызываем в консоль
# b = int(input()) # то же самое что в первом тролько 
# # в данном случае указываем какой тип данных следует считывать из консоли
# c = 30 # Переменная результируюящая
# print(a, '+', b, '=', c) # Печать результата в консоль
# print('{} + {} = {}'.format(a, b, c)) # Печать результата в консоль только в джругом формате
# ---------------------------------------------------------------------------------------------
# print('Введите a') # Все то же самое только для вещественных чисел
# a = float(input())
# print('Введите b')
# b = float(input())
# c = 100
# print(a, '+' , b, '=', c) 
# print('{} + {} = {}'.format(a, b, c))
# -----------------------------------------------------------------------
# a = int(input('введите a: ')) # практически то же самое, но такая задача 
# # решается только в обдном направлении.
# b = int(input('введите b: '))
# c = 33
# print('{} + {} = {}'.format(a, b, c)) 
# ---------------------------------------------------------------------------
# a = int(input('Введите \na: ')) # То же самое что и предыдущая задача только она уже решпет задачу шире.
# b = int(input('Введите \nb: '))
# c = a + b
# print('{} + {} = {}'.format(a, b, c))
# -----------------------------------------------------------------------------

# Арифметические операции

# exp1 = 2**3 - 10 % 5 + 2 * 3
# exp2 = 2**3 - 10 / 5 + 2 * 3
# print(exp1)
# print(exp2)
# ------------------------------------------------------------
# Сокращенные итерации
# iter = 2    
# iter += 1   iter = iter + 1
# iter -= 3   iter = iter - 3
# iter *= 4   iter = iter * 4        Все в точности так же как и на C#
# iter /= 5   iter = iter / 5
# iter //= 6  iter = iter // 6
# iter %= 7   iter = iter % 7
# iter **= 8  iter = iter ** 8
# ----------------------------------------------------------
# Дополнительно
# a, b, c = 1, 2, 3
# print('a = {}, b = {}, c = {}'.format(a, b, c)) 
# ------------------------------------------------------------

# Логические операции и конструкции типа if, else, else if.

# username = input('Введите имя: ') # Вызываем в консоль
# if(username == 'Инсаф'):   # Задаем условие
#     print('Ура, это же ИНСАФ!') # Оператор 1 то есть тело цикла
# else:  # Иначе
#     print('Привет, ', username) # Оператор n + 1
# ------------------------------------------------------------------
# username = input('введите имя: ')
# if username == 'Инсаф':
#     print('Ура, это же ИНСАФ!')
# elif username == 'Марина':
#     print('Я так ждал Вас МАРИНА!')
# elif username == 'Ильнар':
#     print('Ильнар - топ')
# else:
#     print('Привет, ', username)
# --------------------------------------------------------------------
# Управляющие конструкции типа While
# original = 23
# inverted = 0
# while original != 0:
#     inverted = inverted * 10 + (original % 10)
#     original //= 10
# print(inverted)
# ------------------------------------------------------------------------
# original = 23
# inverted = 0
# while original != 0:
#     inverted = inverted * 10 + (original % 10)
#     original //= 10
# else:
#     print('Пожалуй\nхватит')
# print('inverted = ', inverted)
# ---------------------------------------------------------------------------
# for i in 1, -1, 10, 'hello', 'insaf':
#     print(i)
# ----------------------------------------------------------------------------
# r = range(5)            range(0, 5) # От 0 до 5
# r = range(2, 5)         range(2, 5) # От 2 до 5
# r = range(-5, 0)        range(-5, 0) # От минус 5 до 0
# r = range(1, 10, 2)     range(1, 10, 2) # От 1 до 10 с шагом 2 
# r = range(100, 0, -20)  range(100, 0, -20) # От 100 до 0 с отрицательным шагом -20
# ----------------------------------------------------------------------------
